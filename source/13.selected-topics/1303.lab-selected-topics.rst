Lab: Unit Test
==================

Create a lab folder, call it Ch13TopicsLab. Its location is [USERNAME]\\workspace\\introcscs\\. 

The process of creating a unit test involves several steps:

#. Create a solution folder:
   
   #. Inside your Ch13TopicsLab, create a folder, call it UnitTestProject1 (``mkdir UnitTestProject1``).

#. Create an **application project** folder (new here but can be existing), call it ``MathApp``, and 
   a **test project** folder, call it ``MathAppTest``:

   #. ``mkdir MathApp`` inside UnitTestProject1.
   #. ``mkdir MathAppTest`` inside UnitTestProject1.

#. Make MathApp a console app project and MathAppTest a MSTest project:

   #. Inside the MathApp folder, do ``dotnet new console``.
   #. Inside the MathAppTest folder, do ``dotnet new mstest`` (we are using MSTest here).

#. Make MathApp a project of the MathAppTest test project:

   #. ``dotnet add`` [foldername of the Test project csproj file] ``reference`` [foldername of the App project csproj file]

In your application folder, we know there is a default Program.cs file created when we run 
``dotnet new console``. When we run ``dotnet new mstest``, there is a ``UnitTest1`` created 
automatically for you to use. Now revise the content of the two files. 

The content of Program.cs in your MathApp folder should look like the code below, 
filled with a class ``BasicMath`` containing 4 basic arithmetic operation methods::

    namespace SomeMath
    {
    
        // internal class Program
        //     {
        //         private static void Main(string[] args)
        //         {
        //             Console.WriteLine("Hello, World!");
        //         }
        //     }
        
        public class BasicMath
        {
            public double Add(double num1, double num2)
            {
                return num1 + num2;
            }

            public double Subtract(double num1, double num2)
            {
                return num1 - num2;
            }

            public double divide(double num1, double num2)
            {
                return num1 / num2;
            }

            public double Multiply(double num1, double num2)
            {
                // To trace error while testing, writing + operator instead of * operator.
                return num1 + num2;
            }
        }
    }

The content of the UnitTest1 file in the MathAppTest folder, on the other hand, should 
look like this::

    using SomeMath;             ///// we want to talk to the BasicMath class 

    namespace MathAppTest;      ///// generated when creating project

    [TestClass]                 ///// specify the UNIT (class) to be tested
    public class UnitTest1
    {
        [TestMethod]            ///// specify the UNIT (method) to be tested
        public void Test_AddMethod()
        {
            BasicMath bm = new BasicMath();     // create instance
            double res = bm.Add(10, 10);        // run the method
            Assert.AreEqual(res, 20);           // make sure the answers match
        }

        [TestMethod]
        public void Test_SubtractMethod()
        {
            BasicMath bm = new BasicMath();
            double res = bm.Subtract(10, 10);
            Assert.AreEqual(res, 0);
        }

        [TestMethod]
        public void Test_DivideMethod()
        {
            BasicMath bm = new BasicMath();
            double res = bm.divide(10, 5);
            Assert.AreEqual(res, 2);
        }

        [TestMethod]
        public void Test_MultiplyMethod()
        {
            BasicMath bm = new BasicMath();
            double res = bm.Multiply(10, 10);
            Assert.AreEqual(res, 100);
        }
    }
