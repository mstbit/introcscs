
Iteration
============================ 

Iteration, or looping, one of the three basic constructs in computer programming, deals 
repetition. The C# language reference states that iteration statements include 
``for``, ``foreach``, ``do``, and ``while`` and that the iteration statements 
"repeatedly execute a statement or a block of statements": [#iteration]_

- The ``for`` statement executes its body while a specified Boolean expression 
  evaluates to true. 
- The ``foreach`` statement enumerates the elements of a collection and executes 
  its body for each element of the collection. 
- The ``do`` statement conditionally executes its body one or more times. 
- The ``while`` statement conditionally executes its body zero or more times.

The basic purpose of iteration is code repetition. While performing code repetition, 
iteration can be either **count**-controlled or **condition**-controlled. 
When you know exactly how many times you are going to loop through a 
block of code, you use the ``for`` loop, otherwise, a ``while`` loop is used.

``break`` and ``continue``, the two flow control concepts in iteration, give us 
some control over the iteration. At any point within the body of an iteration statement,

- with the ``break`` statement, you can break out of the loop. 
- with the ``continue`` statement, you can step to the next iteration in the loop.














.. rubric:: Footnotes

.. [#iteration] See: `Iteration statements - for, foreach, do, and while <https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/statements/iteration-statements>`_

